/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package priv.barrow.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import priv.barrow.service.persistence.StudentExamPK;

import java.io.Serializable;

/**
 * The base model interface for the StudentExam service. Represents a row in the &quot;OES_StudentExam&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link priv.barrow.model.impl.StudentExamModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link priv.barrow.model.impl.StudentExamImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see StudentExam
 * @see priv.barrow.model.impl.StudentExamImpl
 * @see priv.barrow.model.impl.StudentExamModelImpl
 * @generated
 */
@ProviderType
public interface StudentExamModel extends BaseModel<StudentExam> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a student exam model instance should use the {@link StudentExam} interface instead.
	 */

	/**
	 * Returns the primary key of this student exam.
	 *
	 * @return the primary key of this student exam
	 */
	public StudentExamPK getPrimaryKey();

	/**
	 * Sets the primary key of this student exam.
	 *
	 * @param primaryKey the primary key of this student exam
	 */
	public void setPrimaryKey(StudentExamPK primaryKey);

	/**
	 * Returns the exam record ID of this student exam.
	 *
	 * @return the exam record ID of this student exam
	 */
	public long getExamRecordId();

	/**
	 * Sets the exam record ID of this student exam.
	 *
	 * @param examRecordId the exam record ID of this student exam
	 */
	public void setExamRecordId(long examRecordId);

	/**
	 * Returns the student ID of this student exam.
	 *
	 * @return the student ID of this student exam
	 */
	public long getStudentId();

	/**
	 * Sets the student ID of this student exam.
	 *
	 * @param studentId the student ID of this student exam
	 */
	public void setStudentId(long studentId);

	/**
	 * Returns the in progress of this student exam.
	 *
	 * @return the in progress of this student exam
	 */
	public boolean getInProgress();

	/**
	 * Returns <code>true</code> if this student exam is in progress.
	 *
	 * @return <code>true</code> if this student exam is in progress; <code>false</code> otherwise
	 */
	public boolean isInProgress();

	/**
	 * Sets whether this student exam is in progress.
	 *
	 * @param inProgress the in progress of this student exam
	 */
	public void setInProgress(boolean inProgress);

	/**
	 * Returns the done of this student exam.
	 *
	 * @return the done of this student exam
	 */
	public boolean getDone();

	/**
	 * Returns <code>true</code> if this student exam is done.
	 *
	 * @return <code>true</code> if this student exam is done; <code>false</code> otherwise
	 */
	public boolean isDone();

	/**
	 * Sets whether this student exam is done.
	 *
	 * @param done the done of this student exam
	 */
	public void setDone(boolean done);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(priv.barrow.model.StudentExam studentExam);

	@Override
	public int hashCode();

	@Override
	public CacheModel<priv.barrow.model.StudentExam> toCacheModel();

	@Override
	public priv.barrow.model.StudentExam toEscapedModel();

	@Override
	public priv.barrow.model.StudentExam toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}