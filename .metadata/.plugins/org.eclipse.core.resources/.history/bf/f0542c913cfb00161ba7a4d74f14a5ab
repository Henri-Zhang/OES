package priv.barrow.oes.portlet.util;

import java.util.List;

import com.liferay.dynamic.data.mapping.model.DDMStructure;
import com.liferay.dynamic.data.mapping.service.DDMStructureLocalServiceUtil;
import com.liferay.dynamic.data.mapping.storage.Fields;
import com.liferay.portal.kernel.dao.orm.Criterion;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.dao.orm.Property;
import com.liferay.portal.kernel.dao.orm.PropertyFactoryUtil;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.kernel.util.Validator;

import priv.barrow.oes.portlet.addquestion.exception.NoQuestionStructureException;
import priv.barrow.oes.portlet.model.Constants;

public class ExamUtil {

    public static DDMStructure getExamDDMStructure() {
        DynamicQuery structrueQuery = DDMStructureLocalServiceUtil.dynamicQuery();
        Property property = PropertyFactoryUtil.forName("name");
        Criterion criterion =
                property.like(StringPool.PERCENT+ Constants.QUESTION + Constants.NAME_END_TAG + StringPool.PERCENT);
        structrueQuery.add(criterion);
        List<DDMStructure> ddmStructures = DDMStructureLocalServiceUtil.dynamicQuery(structrueQuery);

        if (Validator.isNull(ddmStructures) || ddmStructures.isEmpty()) {
            String errorMessage = String.format("No ddmStructure found with name [%s]", Constants.QUESTION);
            LOG.error(errorMessage, new NoQuestionStructureException(errorMessage));
            return null;
        }

        return ddmStructures.get(0);
    }

    public static Fields getExamStructureFields(long classPK, Object object) {
        return null;
    }

}
