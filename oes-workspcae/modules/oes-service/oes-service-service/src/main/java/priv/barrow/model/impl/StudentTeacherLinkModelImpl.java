/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package priv.barrow.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import priv.barrow.model.StudentTeacherLink;
import priv.barrow.model.StudentTeacherLinkModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the StudentTeacherLink service. Represents a row in the &quot;OES_StudentTeacherLink&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link StudentTeacherLinkModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link StudentTeacherLinkImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see StudentTeacherLinkImpl
 * @see StudentTeacherLink
 * @see StudentTeacherLinkModel
 * @generated
 */
@ProviderType
public class StudentTeacherLinkModelImpl extends BaseModelImpl<StudentTeacherLink>
	implements StudentTeacherLinkModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a student teacher link model instance should use the {@link StudentTeacherLink} interface instead.
	 */
	public static final String TABLE_NAME = "OES_StudentTeacherLink";
	public static final Object[][] TABLE_COLUMNS = {
			{ "studentId", Types.BIGINT },
			{ "teacherId", Types.BIGINT }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("studentId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("teacherId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE = "create table OES_StudentTeacherLink (studentId LONG not null primary key,teacherId LONG)";
	public static final String TABLE_SQL_DROP = "drop table OES_StudentTeacherLink";
	public static final String ORDER_BY_JPQL = " ORDER BY studentTeacherLink.studentId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY OES_StudentTeacherLink.studentId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(priv.barrow.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.priv.barrow.model.StudentTeacherLink"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(priv.barrow.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.priv.barrow.model.StudentTeacherLink"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(priv.barrow.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.priv.barrow.model.StudentTeacherLink"),
			true);
	public static final long STUDENTID_COLUMN_BITMASK = 1L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(priv.barrow.service.util.ServiceProps.get(
				"lock.expiration.time.priv.barrow.model.StudentTeacherLink"));

	public StudentTeacherLinkModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _studentId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setStudentId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _studentId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return StudentTeacherLink.class;
	}

	@Override
	public String getModelClassName() {
		return StudentTeacherLink.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("studentId", getStudentId());
		attributes.put("teacherId", getTeacherId());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long studentId = (Long)attributes.get("studentId");

		if (studentId != null) {
			setStudentId(studentId);
		}

		Long teacherId = (Long)attributes.get("teacherId");

		if (teacherId != null) {
			setTeacherId(teacherId);
		}
	}

	@Override
	public long getStudentId() {
		return _studentId;
	}

	@Override
	public void setStudentId(long studentId) {
		_columnBitmask |= STUDENTID_COLUMN_BITMASK;

		if (!_setOriginalStudentId) {
			_setOriginalStudentId = true;

			_originalStudentId = _studentId;
		}

		_studentId = studentId;
	}

	public long getOriginalStudentId() {
		return _originalStudentId;
	}

	@Override
	public long getTeacherId() {
		return _teacherId;
	}

	@Override
	public void setTeacherId(long teacherId) {
		_teacherId = teacherId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			StudentTeacherLink.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public StudentTeacherLink toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (StudentTeacherLink)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		StudentTeacherLinkImpl studentTeacherLinkImpl = new StudentTeacherLinkImpl();

		studentTeacherLinkImpl.setStudentId(getStudentId());
		studentTeacherLinkImpl.setTeacherId(getTeacherId());

		studentTeacherLinkImpl.resetOriginalValues();

		return studentTeacherLinkImpl;
	}

	@Override
	public int compareTo(StudentTeacherLink studentTeacherLink) {
		long primaryKey = studentTeacherLink.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof StudentTeacherLink)) {
			return false;
		}

		StudentTeacherLink studentTeacherLink = (StudentTeacherLink)obj;

		long primaryKey = studentTeacherLink.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		StudentTeacherLinkModelImpl studentTeacherLinkModelImpl = this;

		studentTeacherLinkModelImpl._originalStudentId = studentTeacherLinkModelImpl._studentId;

		studentTeacherLinkModelImpl._setOriginalStudentId = false;

		studentTeacherLinkModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<StudentTeacherLink> toCacheModel() {
		StudentTeacherLinkCacheModel studentTeacherLinkCacheModel = new StudentTeacherLinkCacheModel();

		studentTeacherLinkCacheModel.studentId = getStudentId();

		studentTeacherLinkCacheModel.teacherId = getTeacherId();

		return studentTeacherLinkCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(5);

		sb.append("{studentId=");
		sb.append(getStudentId());
		sb.append(", teacherId=");
		sb.append(getTeacherId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(10);

		sb.append("<model><model-name>");
		sb.append("priv.barrow.model.StudentTeacherLink");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>studentId</column-name><column-value><![CDATA[");
		sb.append(getStudentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>teacherId</column-name><column-value><![CDATA[");
		sb.append(getTeacherId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = StudentTeacherLink.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			StudentTeacherLink.class
		};
	private long _studentId;
	private long _originalStudentId;
	private boolean _setOriginalStudentId;
	private long _teacherId;
	private long _columnBitmask;
	private StudentTeacherLink _escapedModel;
}